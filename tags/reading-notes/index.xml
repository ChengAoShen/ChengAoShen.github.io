<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading Notes | ChengAo Shen</title>
    <link>https://chengaoshen.com/tags/reading-notes/</link>
      <atom:link href="https://chengaoshen.com/tags/reading-notes/index.xml" rel="self" type="application/rss+xml" />
    <description>Reading Notes</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sat, 22 Jun 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://chengaoshen.com/media/icon_hu68170e94a17a2a43d6dcb45cf0e8e589_3079_512x512_fill_lanczos_center_3.png</url>
      <title>Reading Notes</title>
      <link>https://chengaoshen.com/tags/reading-notes/</link>
    </image>
    
    <item>
      <title>ðŸ‘“Reading Notes for &#34;LTSF-Linear&#34;</title>
      <link>https://chengaoshen.com/blogs/reading-notes-for-ltsf-linear/</link>
      <pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://chengaoshen.com/blogs/reading-notes-for-ltsf-linear/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This paper insists that the time series is an ordered set of continuous points that will result in the loss of temporal information when using the Transformer structure. To prove this opinion, they propose models named &lt;strong&gt;LSTF-Linear&lt;/strong&gt; which achieve outstanding performance and conduct comprehensive studies.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What problem does the paper try to solveï¼Ÿ&lt;/p&gt;
&lt;p&gt;Attempt to verify whether the Transformer is effective in time series prediction problems and whether a simple model can surpass all current Transformer-based models.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What is the proposed solution?&lt;/p&gt;
&lt;p&gt;The LSTF Linear model was proposed as an alternative, achieving extremely high performance with only a single-layer network&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What are the key experimental results in this paper?&lt;/p&gt;
&lt;p&gt;Achieved better performances than Transformer-based methods on multiple datasets such as electricity, healthcare, and meteorology&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What are the main contributions of the paper?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Challenge the Transformer structure in the long-term time series forecasting task.&lt;/li&gt;
&lt;li&gt;Introduce the LTSF-Linear model which only has one layer while achieving compared results in various fields.&lt;/li&gt;
&lt;li&gt;Conduct comprehensive empirical studies on various aspects of existing Transformer-based solutions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What are the strong points and weak points in this paper?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strong Points&lt;/strong&gt;ï¼š Proposed potential issues in the current research route and opened up a new perspective in a simple way.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Weak Points&lt;/strong&gt;: Only conducted research on prediction problems and have not explored other issues, such as anomaly detection.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;Over the past several decades, the Transformer has been widely used as the TSF solution. However, the self-attention mechanism is &lt;strong&gt;permutation-invariant&lt;/strong&gt; and &lt;strong&gt;anti-order&lt;/strong&gt; which will cause the loss of temporal information. Typically, time series contain less semantic meaning compared with NLP or CV problems and need more temporal information, which will emphasize this problem. Thus, this paper tries to challenge the Transformer-based LSTF solution with direct multi-step forecasting strategies.&lt;/p&gt;
&lt;p&gt;For the time series containing $C$ variates, the historical data can be represented as $\mathcal{X}=\{X_1^t,\dots,X_C^t\}_{t=1}^L$, wherein $L$ is the look-back window size. The forecasting problems need to predict $T$ feature time stepâ€™s value $\hat{\mathcal{X}}=\{\hat{X}_1^t,\dots,\hat{X}_C^t\}_{t=1}^L$. When $T&gt;1$, the methods can be divided into two parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integrated multi-step(IMS): Learn a single-step forecaster and interactively apply it to obtain multi-step predictions. This method has a smaller variance but will cause error accumulation.&lt;/li&gt;
&lt;li&gt;Direct multi-step(DMS): Directly optimize the multi-step forecasting objective at one. This method can have more accurate predictions when $T$ is large.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;methods&#34;&gt;Methods&lt;/h2&gt;
&lt;h3 id=&#34;transformer-based-methods&#34;&gt;Transformer-Based Methods&lt;/h3&gt;
&lt;p&gt;The vanilla Transformer model has some limitations when applied to time series problems, thus various works try to improve the performance by adding or replacing some parts of the Transformer. Generally speaking, it can be divided into four major parts.&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;figure&#34;&gt;
  &lt;img class=&#34;img&#34; src=&#34;https://raw.githubusercontent.com/ChengAoShen/Image-Hosting/main/images/image-20240622212351839.png&#34; alt=&#34;The pipeline of Transformer-Based Methods&#34;&gt;
  &lt;figcaption style=&#34;text-align: center;&#34;&gt;The pipeline of Transformer-Based Methods&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Preprocessing&lt;/strong&gt;: To use Transformer to deal with time series datasets, some preprocessing is needed to adopt the data structures, such as normalization with zero-mean and adding timestamps as NLP did. Specifically, in Autoformer, seasonal-trend decomposition is proposed to get the trend part and the cyclical part, which helps data more clearly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Embedding&lt;/strong&gt;: In NLPâ€™s Transformer, embedding will map the words to the vector in a typical space that reveals the meaning. In time series, time information is significantly important. Thus, various timestamp methods are proposed to help the model reserve the temporal information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Encoder/Decoder&lt;/strong&gt;: To help the Transformer structure adopt the time series problems, there have been many improvements made to the encoder and decoder in this work. Among them, in the encoder section, many improvements have been proposed to reduce computational consumption and increase speed. In the decoder section, to avoid cumulative errors, it has also begun to transition from IMS to DMS.&lt;/p&gt;
&lt;p&gt;The success of Transformer in the NLP field is largely attributed to its understanding of the semantic relationships between words, but in time series problems, temporary information has become even more important. However, the Transformer&amp;rsquo;s ability to model time largely comes from the timestamp rather than its structure.&lt;/p&gt;
&lt;h3 id=&#34;lstf-linear&#34;&gt;LSTF-Linear&lt;/h3&gt;
&lt;p&gt;This paper hypothesizes that the improvement in the Transformer-Based model is due to the DMS strategy rather than the Transformer. Thus they propose LSTF-Linear that directly regresses historical time series for future prediction via a weighted sum operation to verify this thinking. The model can be a formula as :
&lt;/p&gt;
$$
\hat{X}_i=WX_i
$$
&lt;p&gt;
Wherein $W\in\mathbb{R}^{T\times L}$ is a linear layer along the temporal axis. Furthermore, this paper proposes two sub-models, DLinear which uses decomposition to obtain the trend part and the seasonal part, and the NLinear which subtracts a portion before making the prediction and rejoined it after making the prediction.&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;figure&#34;&gt;
  &lt;img class=&#34;img&#34; src=&#34;https://raw.githubusercontent.com/ChengAoShen/Image-Hosting/main/images/image-20240622212512231.png&#34; alt=&#34;The Structure of LSTF-Linear&#34;&gt;
  &lt;figcaption style=&#34;text-align: center;&#34;&gt;The Structure of LSTF-Linear&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;
&lt;p&gt;In order to verify the quality of the LSTF-Linear, the author selected some common sequence data from real life and compared with five popular Transformer-based model. All results are show as follow:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;figure&#34;&gt;
  &lt;img class=&#34;img&#34; src=&#34;https://raw.githubusercontent.com/ChengAoShen/Image-Hosting/main/images/image-20240623194839137.png&#34; alt=&#34;Datasets Description&#34;&gt;
  &lt;figcaption style=&#34;text-align: center;&#34;&gt;Datasets Description&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;figure&#34;&gt;
  &lt;img class=&#34;img&#34; src=&#34;https://raw.githubusercontent.com/ChengAoShen/Image-Hosting/main/images/image-20240623194933447.png&#34; alt=&#34;Model Comparison&#34;&gt;
  &lt;figcaption style=&#34;text-align: center;&#34;&gt;Model Comparison&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;figure&#34;&gt;
  &lt;img class=&#34;img&#34; src=&#34;https://raw.githubusercontent.com/ChengAoShen/Image-Hosting/main/images/image-20240623195006823.png&#34; alt=&#34;Visualize results&#34;&gt;
  &lt;figcaption style=&#34;text-align: center;&#34;&gt;Visualize results&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
